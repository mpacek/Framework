// ------------------------------------------------
// Mixins
// ------------------------------------------------ //

   
// Text
// ------------------------------------------------

// Font-size
@mixin font-size($font-size, $line-height:true) {
	font-size:$font-size;
	font-size:($font-size / $font-size--base)*1rem;
	@if $line-height == true{
		line-height:ceil($font-size / $line-height--base) * ($line-height--base / $font-size);
	}
}


// Boxes
// ---------------------------------------

// Box sizing
@mixin box-sizing($type) {
	-moz-box-sizing:$type;
	-webkit-box-sizing:$type;
	box-sizing:$type;
}

// Border radius
@mixin border-radius($radius) {
	-webkit-border-radius:$radius;
	border-radius:$radius;
}

// Box shadow
@mixin box-shadow($type) {
	-webkit-box-shadow:$type;
	box-shadow:$type;
}


// Media query for retina devices
@mixin retina {
	@media print,
	(-webkit-min-device-pixel-ratio:1.25),
	(-o-min-device-pixel-ratio:5/4),
	(min-resolution:120dpi){
		@content;
	}
}


// CSS3
// ------------------------------------------------ 

// Vendor
@mixin vendor($property,$value) {
	-webkit-#{$property}:$value;
		-moz-#{$property}:$value;
		 -ms-#{$property}:$value;
		  -o-#{$property}:$value;
			  #{$property}:$value;
}

// Transform
@mixin transform($type) {
	-moz-transform:$type;
	-webkit-transform:$type;
	-o-transform:$type;
	-ms-transform:$type;
	transform:$type;
}

// Transform origin
@mixin transform-origin($type) {
	-moz-transform-origin:$type;
	-webkit-transform-origin:$type;
	-o-transform-origin:$type;
	-ms-transform-origin:$type;
	transform-origin:$type;
}

// Transition
@mixin transition($type) {
	-webkit-transition:$type;
	-moz-transition:$type;
	-ms-transition:$type;
	-o-transition:$type;
	transition:$type;
}

// Keyframe
@mixin keyframe ($animation-name) {
	@-webkit-keyframes $animation-name {
		@content;
	}
	@-moz-keyframes $animation-name {
		@content;
	}
	@-ms-keyframes $animation-name {
		@content;
	}
	@-o-keyframes $animation-name {
		@content;
	}
	@keyframes $animation-name{
		@content;
	}
}


// Grid
// ------------------------------------------------

// Grid setup loop
@mixin grid-setup($grid-columns, $namespace, $type) {
	@for $i from 1 through $grid-columns {
		@include grid-calc($i, $grid-columns, $namespace, $type);
	}
}

// Calculate widths, or offset
@mixin grid-calc($index, $grid-columns, $namespace, $type) {
	@if ($type == width) {
		.l-col-#{$namespace}-#{$index} {
			width: percentage(($index / $grid-columns));
		}
	}
	@if ($type == offset) {
		.l-col-#{$namespace}-offset-#{$index} {
			margin-left: percentage(($index / $grid-columns));
		}
	}
}


// Responsive
// ------------------------------------------------

// Media query
// Using: @include media-query(table){ [styles] }

$phone-end: $smartphone-start - 1px;
$smartphone-end: $table-start - 1px;
$table-end: $desktop-start - 1px;

@mixin media-query($media-query) {
	@if $media-query == phone {
		@media only screen and (max-width:$phone-end) { @content; }
	}
	@if $media-query == smartphone {
		@media only screen and (max-width:$smartphone-end) { @content; }
	}
	@if $media-query == table {
		@media only screen and (max-width:$table-end) { @content; }
	}
	@if $media-query == desktop {
		@media only screen and (min-width:$desktop-start) { @content; }
	}
}