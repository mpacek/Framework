// ------------------------------------------------
// Mixins
// ------------------------------------------------ //

   
// Text
// ------------------------------------------------

// Font-size
@mixin font-size($font-size) {
	font-size:$font-size;
	font-size:($font-size / $font-size--base)*1rem;
}

// Accessibility
@mixin accessibility {
	width:1px!important; height:1px!important; padding:0!important; margin:-1px!important;
	clip:rect(0 0 0 0)!important;
	border:0!important;
	overflow:hidden!important;
	position:absolute!important;
}


// Layout
// ------------------------------------------------

// Column
@mixin column($number,$gap) {
	-moz-column-count:$number;
	-webkit-column-count:$number;
	column-count:$number;
	-moz-column-gap:$gap;
	-webkit-column-gap:$gap;
	column-gap:$gap;
}


// Boxes
// ------------------------------------------------

// Box sizing
@mixin box-sizing($type) {
	-moz-box-sizing:$type;
	-webkit-box-sizing:$type;
	box-sizing:$type;
}

// Border radius
@mixin border-radius($radius) {
	-webkit-border-radius:$radius;
	border-radius:$radius;
}

// Box shadow
@mixin box-shadow($type) {
	-webkit-box-shadow:$type;
	box-shadow:$type;
}


// Grid
// ------------------------------------------------

// Grid setup loop
@mixin grid-setup($grid-columns, $namespace, $type) {
	@for $i from 1 through $grid-columns {
		@include grid-calc($i, $grid-columns, $namespace, $type);
	}
}

// Calculate columns width, or offset
@mixin grid-calc($index, $grid-columns, $namespace, $type) {
	@if ($type == width) {
		.l-col#{$namespace}-#{$index} {
			width: percentage(($index / $grid-columns));
		}
	}
	@if ($type == offset) {
		.l-col#{$namespace}--offset-#{$index} {
			margin-left: percentage(($index / $grid-columns));
		}
	}
}


// Responsive
// ------------------------------------------------

// Media query
// Using: @include media-query(table){ [styles] }
// 
// Breakpoints defined in _config
// Mixins value: phone, smartphone, tablet, desktop

$breakpoint-end--phone: $breakpoint-start--smartphone - 1px;
$breakpoint-end--smartphone: $breakpoint-start--tablet - 1px;
$breakpoint-end--tablet: $breakpoint-start--desktopt - 1px;

@mixin media-query($media-query) {
	@if $media-query == phone {
		@media only screen and ( max-width:$breakpoint-end--phone ) { @content; }
	}
	@if $media-query == smartphone {
		@media only screen and ( max-width:$breakpoint-end--smartphone ) { @content; }
	}
	@if $media-query == tablet {
		@media only screen and ( max-width:$breakpoint-end--tablet ) { @content; }
	}
	@if $media-query == desktop {
		@media only screen and ( min-width:$breakpoint-start--desktopt ) { @content; }
	}
}


// CSS3
// ------------------------------------------------

// Vendor
@mixin vendor($property,$value) {
	-webkit-#{$property}:$value;
	-moz-#{$property}:$value;
	-ms-#{$property}:$value;
	-o-#{$property}:$value;
	#{$property}:$value;
}

// Transform
@mixin transform($type) {
	-moz-transform:$type;
	-webkit-transform:$type;
	-o-transform:$type;
	-ms-transform:$type;
	transform:$type;
}

// Transform origin
@mixin transform-origin($type) {
	-moz-transform-origin:$type;
	-webkit-transform-origin:$type;
	-o-transform-origin:$type;
	-ms-transform-origin:$type;
	transform-origin:$type;
}

// Transition
@mixin transition($type) {
	-webkit-transition:$type;
	-moz-transition:$type;
	-ms-transition:$type;
	-o-transition:$type;
	transition:$type;
}

// Keyframe
@mixin keyframe ($animation-name) {
	@-webkit-keyframes $animation-name {
		@content;
	}
	@-moz-keyframes $animation-name {
		@content;
	}
	@-ms-keyframes $animation-name {
		@content;
	}
	@-o-keyframes $animation-name {
		@content;
	}
	@keyframes $animation-name {
		@content;
	}
}